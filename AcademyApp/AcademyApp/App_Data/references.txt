http://www.johnpapa.net/zen-coding-in-visual-studio-2012/
http://getbootstrap.com/
http://bootswatch.com/
http://www.colorhexa.com/

Tutors notes :
Introduction to tutor 
Introduction to jumpstart sessions
	>demo intensive
	>less of theory
	>this is not for the advanced users, or for people who have already done MVC
	>this is for people who have not done any web programming but need to start somewhere
	>C# background is required
	>LINQ understanding is an added advantage
	>understanding of databases and simple SQL is requried
	>no prerequiresites for HTML5 or JS, some working knowledge woudl be covered here in the session
	>HTML5 and JS are vast topics and deserve their own sessions, here we are just aiming to get the working knowledge
	>sessions woudl happen over the virtual classroom, though live classrooms are effective
	>all the code is shared .. https://github.com/kneerunjun/school-mvcasp/tree/04-27-2015-ASP-Sessions/AcademyApp/AcademyApp
		>make sure you are in the correct repository and the branch as well. 
		>we assume that you have knowledge of Github and collaborative development
		>Github introduction.. 
	>recommended course if to be taken online independently : http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start
	>about MVA - and how you can register for courses there.. 
		>MVA is for fast learners and makes no sense to start from there.

Introduction to the MVC ASP technology
	> where do you stand in terms of the technology you are to use now.. 
		> if you were not using MVC what could you be using ?
			> web forms
			> WPF / silverlight
			> traditional ASP.net
			> ...
		>MVA presentation
	> Why is MVC becoming more popular? http://www.asp.net/mvc/overview/older-versions-1/overview/asp-net-mvc-overview
		> TDD and separation of concerns.
		> extensible pluggable framework
		> Lets you build URLs that are directly mapping to the components inside the server and that means comprehensive set of URLs can be built 
		also with SEO support following the REST protocol
		> Support for ASP markup , not only HTML
		> solid support for authentication and authorization that comes with the ASP framework.
	> Introduction to Visual Studio 
		>Technology the tutor is using
			>VS2013 utl, update 4
			>Windows 8
			>.NET framework 4.5
			>MVC4 ASP application
			>SQL server 2008 ( im not sure if this is going to work .. but hope it does)
			>EF 5.0.0 + - this for the repository level
	> Starting with the project application from scracth
		>Web >VS2012 >MVC4 Web application >Internet based application

	> Understanding how the request is executed in the ASP environment, what happens behind the scenes
		>receive the request : From the global asax, the route objects are created > route Table
		>URLrouting > first route in the route table that matches > Route data >request context
		>Create the MVC request : Request context > MVCRouteHandler 
		>Call the controller : MVCRouteHandler >Controller >Action
		>Execute action : action is executed and the result is returned

		>>Types of results : 
			1.ViewResult
			2.JsonResult
			3.HttpResult
			4.EmptyResult
			5.RedirectToRouteResult
			6.RedirectResult
	> Show demo on 
		? Show a real life controller - just a class, nothing else
		? how does a url look in practice, show url effects 
		? show how the control reaches the controller from the url 
		? show how parameters are send via the url
	>Simple demo
		>Have to pass a custom message to the view and the user should be able to see it
	> Hello user demo
		>User enters his name
		>Gets a html page that greets the user

	Problem-01 definition
	> We are to make some academy app where you can have trainings and the list of trainings to be displayed. 
	> frmo the database we are to display the tranining and the training details in the table on the webpage
	> user should be able to search for the trainings as well, and such a search is by the training title only

	>open space for questions and answers. 
	

	>> Day 04  : 
	Validation : 
		Why do you need validation ? 
		Before dispatching the model to the controller, a model that has been made at the fron end it 
		is necessary to have that checkpost to chek the vitals. Problem is since the server is the one who can vlaidate
		it means you would have to send the model to the server everytime the user is filling up th pieces of the detail
		Making such round trips is not advisable and also detriemental to the speed of the webapp
		you could have the entire validation logic being sent from the server just once with the form, but the user might be using 
		a browser with restricted scripts and thus your validation logic could fail entirely.So depending on the scripts entirely is simply not advisable 

		Validation then is divided into 2 pieces :1
		1. Server side validation using data annotation
		2. Client side validation using Ajax


		Here is the list of Data Annotation that you could use
		1. Compare
		2. Remote
		3. Required 
		4. Range
		5. Regular expression
		6. StringLength`

		>> demo with one example and multiple annotations .. 
		here is how you need to check
			<add key="ClientValidationEnabled" value="true" />
			<add key="UnobtrusiveJavaScriptEnabled" value="true" />
		make sure you have this in the app settings and enabled  ==true.


		Client side validation using Ajax : 
		With the advent of modern browsers supporting rich client side behaviour and thus client side validation is quite popular
		There are many client side validation frameworks already in place and one should make use of them . 
		as such making your own validation work is counter-productive and less effective. Someone else if has done it already, 
		you can just make use of the same in your project

		for Client side validations to happen
		1. MVC supports the JQuery validate framework
		2. MVC also supports unobtrusive java script

		Scripts are attached to the input elements and keep listening to the input in the elements. 